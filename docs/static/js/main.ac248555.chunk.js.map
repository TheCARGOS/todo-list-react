{"version":3,"sources":["logo.svg","components/Header/Header.js","components/AdminPanel/AdminPanel.js","components/Todos/Todo/Todo.js","components/Todos/TodosFilter/TodosFilter.js","components/Todos/Todos.js","pages/MainPage/MainPage.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","AdminPanel","addTodo","defaultForm","name","description","useState","formData","setFormData","Form","onChange","e","target","value","Field","Input","placeholder","TextArea","Button","fluid","onClick","isActive","Icon","Todo","id","deleteTodo","editTodo","showContent","setShowContent","isEditing","setIsEditing","formTodo","setFormTodo","handleFormChange","class","defaultValue","style","width","Divider","content","color","TodosFilter","setFilter","filter","setToSearch","handleSetFilter","FormField","Checkbox","radio","label","checked","size","icon","iconPosition","upperCase","toUpperCase","Todos","todos","map","todo","MainPage","setTodos","filteredTodos","setFilteredTodos","toSearch","useEffect","a","fetchTodos","todosFromServer","updatedFilteredTodos","secondFilter","includes","updateFiltered","fetch","res","json","todosResponse","method","headers","body","JSON","stringify","newTodo","status","alert","Grid","Row","Column","length","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ac248555.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import \"./Header.scss\"\r\n\r\nexport default function Header() {\r\n    return (\r\n        <div className=\"main-header\">\r\n            <h1 className=\"main-header__title\">TODO APP WITH REACTJS</h1>            \r\n        </div>\r\n    )\r\n}\r\n","import \"./AdminPanel.scss\"\r\nimport { Form, Input, TextArea, Button, Icon } from \"semantic-ui-react\"\r\nimport { useState } from \"react\"\r\n\r\nexport default function AdminPanel({ addTodo }) {\r\n\r\n    const defaultForm = {\r\n        name: \"\",\r\n        description: \"\"\r\n    }\r\n\r\n    const [formData, setFormData] = useState(defaultForm)\r\n    \r\n    const submitForm = () => {\r\n        addTodo({\r\n            ...formData,\r\n            isActive: false\r\n        })\r\n        setFormData(defaultForm)\r\n    }\r\n\r\n    const handleFormOnChange = e => {\r\n        setFormData({\r\n            ...formData,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"main-admin-panel\">\r\n            <header className=\"main-admin-panel__header\">\r\n                <h3 className=\"main-admin-panel__header__title\">ADMIN PANEL</h3>\r\n            </header>\r\n            <Form className=\"main-admin-panel__form\" onChange={ handleFormOnChange }>\r\n                <Form.Field>\r\n                    <Input name=\"name\" placeholder=\"To-Do name\" />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                    <TextArea name=\"description\" placeholder=\"Why would you do this to-do?\"></TextArea>\r\n                </Form.Field>  \r\n\r\n                <Button\r\n                    fluid\r\n                    onClick={ submitForm }\r\n                >\r\n                    <Icon name=\"plus\" />\r\n                    ADD\r\n                </Button>\r\n            </Form>     \r\n        </div>\r\n    )\r\n}\r\n","import { Icon, Input, Button, Divider, TextArea } from \"semantic-ui-react\"\r\nimport \"./Todo.scss\"\r\nimport { useState } from \"react\"\r\n\r\nexport default function Todo({name, description, isActive, id, deleteTodo, editTodo}) {\r\n    const [showContent, setShowContent] = useState(false)\r\n    const [isEditing, setIsEditing] = useState(false)\r\n    const [formTodo, setFormTodo] = useState({\r\n        id,\r\n        name,\r\n        description\r\n    })\r\n\r\n    const toggleShowContent = () => {\r\n        setShowContent(!showContent)\r\n    }\r\n\r\n    const handleDeleteTodo = () => {\r\n        deleteTodo(id)\r\n    }\r\n\r\n    const handleChangeToEdit = () => {\r\n        \r\n    }\r\n\r\n    const handleFormChange = e => {\r\n        setFormTodo({\r\n            id,\r\n            name,\r\n            description,\r\n            isActive,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const applyChanges = () => {\r\n        editTodo(id, formTodo)\r\n        setIsEditing(false)\r\n    }\r\n\r\n    return (\r\n        <div className={`todo ${isActive? \"todo--active\": \"\"}`}>\r\n            <div class=\"todo__header\" onClick={ toggleShowContent }>\r\n                { isEditing?\r\n                    <Input \r\n                        defaultValue={name}\r\n                        style={{width:\"100%\"}}\r\n                        onChange={ handleFormChange }\r\n                        name=\"name\"\r\n                    />:\r\n                    <h2 className=\"todo__header__title\">{ name }</h2>\r\n                }\r\n                <Icon\r\n                    name={`${showContent? \"angle up\" : \"angle down\"}`}\r\n                    className=\"todo__header__icon\"\r\n                />\r\n            </div>\r\n            <div className={`todo__content ${showContent? \"\" : \"todo__content--hide\"} `}>\r\n                { isEditing?\r\n                    <TextArea\r\n                        defaultValue={description}\r\n                        style={{width:\"100%\"}}\r\n                        onChange={ handleFormChange }\r\n                        name=\"description\"\r\n                    />:\r\n                    <p className=\"todo__content__span\">{ description }</p>\r\n                }\r\n                <Divider />\r\n                <Button\r\n                    onClick={ isEditing? (() => setIsEditing(false)): () => setIsEditing(true) }\r\n                    content={ isEditing? \"CANCEL EDIT\": \"EDIT TO-DO\" }\r\n                />\r\n                <Button\r\n                    onClick={ isEditing? (applyChanges): (handleDeleteTodo) }\r\n                    content={ isEditing? \"APPLY CHANGES\": \"DELETE TO-DO\" }\r\n                    color=\"black\"\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import \"./TodosFilter.scss\"\r\nimport { Checkbox, FormField, Input, Icon } from \"semantic-ui-react\"\r\n\r\nexport default function TodosFilter({setFilter, filter, setToSearch}) {\r\n\r\n    const handleSetFilter = (e, { value }) => setFilter(value)\r\n\r\n    const handleOnChange = e => {\r\n        const upperCase = e.target.value.toUpperCase()\r\n        setToSearch( upperCase )\r\n    }\r\n\r\n    return (\r\n        <div className=\"todos-filter\">\r\n            <FormField className=\"todo-filter__form-field\">\r\n                <Checkbox \r\n                    radio\r\n                    value=\"all\"\r\n                    onChange={ handleSetFilter }\r\n                    label='All'\r\n                    checked={ filter === \"all\" }\r\n                />\r\n                <Checkbox \r\n                    radio\r\n                    value=\"active\"\r\n                    onChange={ handleSetFilter }\r\n                    label='Active'\r\n                    checked={ filter === \"active\" }\r\n                />\r\n                <Checkbox \r\n                    radio\r\n                    value=\"inactive\"\r\n                    onChange={ handleSetFilter }\r\n                    label='Inactive'\r\n                    checked={ filter === \"inactive\" }\r\n                />\r\n            </FormField>\r\n            <Input\r\n                size=\"massive\"\r\n                icon=\"search\"\r\n                iconPosition=\"left\"\r\n                placeholder=\"To-do to search...\"\r\n                className=\"todo-filter__search\"\r\n                onChange={handleOnChange}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import \"./Todos.scss\"\r\nimport Todo from \"./Todo\"\r\nimport TodosFilter from \"./TodosFilter\"\r\n\r\nexport default function Todos({todos, deleteTodo, editTodo}) {\r\n    return (\r\n        <div className=\"todos-container\">\r\n            { todos.map(todo => \r\n                <Todo\r\n                    name={ todo.name }\r\n                    description={ todo.description }\r\n                    isActive={ todo.isActive }\r\n                    deleteTodo={ deleteTodo }\r\n                    editTodo={ editTodo }\r\n                    id={ todo.id }\r\n                />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n","import \"./MainPage.scss\"\r\nimport { Grid } from \"semantic-ui-react\"\r\nimport Header from \"../../components/Header\"\r\nimport AdminPanel from \"../../components/AdminPanel\"\r\nimport Todos from \"../../components/Todos\"\r\nimport TodosFilter from \"../../components/Todos/TodosFilter\"\r\nimport { useState, useEffect } from \"react\"\r\n\r\nexport default function MainPage() {\r\n    const [todos, setTodos] = useState([])\r\n    const [filter, setFilter] = useState()\r\n    const [filteredTodos, setFilteredTodos] = useState([])\r\n    const [toSearch, setToSearch] = useState(\"\")\r\n\r\n\r\n\r\n    useEffect( async () => {\r\n            const todosFromServer = await fetchTodos()\r\n            setTodos(todosFromServer)\r\n\r\n            updatedFilteredTodos()\r\n\r\n    }, [filter, toSearch])\r\n\r\n    const updatedFilteredTodos = () => {\r\n        let secondFilter\r\n        if ( filter == \"all\" ) {\r\n            secondFilter = todos.filter( todo => \r\n                todo.name.toUpperCase().includes(toSearch)\r\n            )\r\n        } else {\r\n            if ( filter == \"active\" ) {\r\n                // setFilteredTodos(todos.filter(todo => todo.isActive === true))\r\n                secondFilter = todos.filter(todo => todo.isActive === true)\r\n                secondFilter = secondFilter.filter( todo => \r\n                    todo.name.toUpperCase().includes(toSearch)\r\n                )\r\n            } else {\r\n                // setFilteredTodos(todos.filter(todo => todo.isActive === false))\r\n                secondFilter = todos.filter(todo => todo.isActive === false)\r\n                secondFilter = secondFilter.filter( todo => \r\n                    todo.name.toUpperCase().includes(toSearch)\r\n                )\r\n            }\r\n        }\r\n        setFilteredTodos(secondFilter)\r\n    }\r\n\r\n    const updateFiltered = () => {\r\n        const otherFiltered = filter === \"all\"? \"active\" : \"all\"\r\n        setFilter(otherFiltered)\r\n        setFilter(filter)\r\n    }\r\n\r\n    const fetchTodos = async () => {\r\n        const res = await fetch(\"http://localhost:5000/todos\")\r\n        const todosResponse = await res.json()\r\n        return todosResponse\r\n    }\r\n\r\n    const fetchTodo = async (id) => {\r\n        const res = await fetch(\"http://localhost:5000/todos/id\")\r\n        const todo = await res.json()\r\n        return todo\r\n    }\r\n\r\n    const addTodo = async (todo) => {\r\n        const res = await fetch(\"http://localhost:5000/todos/\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(todo),\r\n        })\r\n\r\n        const newTodo = await res.json()\r\n        setTodos([...todos, newTodo])\r\n        updateFiltered()\r\n    }\r\n\r\n    const deleteTodo = async (id) => {\r\n        const res = await fetch(`http://localhost:5000/todos/${id}`, {\r\n            method: \"DELETE\"\r\n        })\r\n\r\n        res.status === 200?\r\n            setTodos( todos.filter( todo => todo.id !== id ) ):\r\n            alert(\"Error deleting this todo.\")\r\n\r\n        updateFiltered()\r\n    }\r\n\r\n    const editTodo = async (id, todo) => {\r\n        const res = await fetch(`http://localhost:5000/todos/${id}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(todo)\r\n        })\r\n        updateFiltered()\r\n    }\r\n\r\n    const toggleTodoActive = async (id, todo) => {\r\n        const todoToToggle = await fetchTodo(id)\r\n        const toggledTodo = {\r\n            ...todoToToggle,\r\n            active: !todoToToggle.active\r\n        }\r\n\r\n        const res = await fetch(`http://localhost:5000/todos/${id}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(toggledTodo)\r\n        })\r\n\r\n        const data = await res.json()\r\n        setTodos(\r\n            todos.map( todo => {\r\n                return todo.id === id ? { ...todo, active: data.active } : todo\r\n            } )\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Grid className=\"main-page\">\r\n            <Grid.Row>\r\n                <Grid.Column className=\"main-bar\" width={16}>\r\n                    <Header />\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n                <Grid.Column className=\"column\" width={3}>\r\n                    <AdminPanel addTodo={addTodo} />\r\n                </Grid.Column>\r\n                <Grid.Column className=\"column\" width={13}>\r\n                    <TodosFilter\r\n                        setFilter={setFilter}\r\n                        filter={filter} \r\n                        setToSearch={setToSearch}\r\n                    />\r\n                    { todos.length > 0 ?\r\n                        (<Todos \r\n                            todos={filteredTodos}\r\n                            deleteTodo={deleteTodo}\r\n                            editTodo={editTodo}\r\n                        />):\r\n                        (\"No Todos to show\") }\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n        </Grid>\r\n    )\r\n}\r\n","import logo from './logo.svg';\nimport './App.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport MainPage from \"./pages/MainPage\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MainPage />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}